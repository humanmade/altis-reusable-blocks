name: CI Build
on:
  push:
    branches:
      - refs/head/*
      - !gh-actions

jobs:
  build:
    name: Build and Check
    strategy:
      matrix:
        php: [7.3, 7.4]
        node: [12.9.1]
    runs-on: ubuntu-latest
    # each step has a 10 minute budget
    timeout-minutes: 10
    container:
      image: php:${{ matrix.php }}-apache
      env:
        NODE_ENV: development
      ports:
      - 80
      volumes:
      - $GITHUB_WORKSPACE:/var/www/html
    steps:
    - name: Set up container
      run: |
        export DEBIAN_FRONTEND=noninteractive
        echo "Update package lists."
        apt-get -y update
        echo "Install base packages."
        apt-get -y --allow-downgrades --allow-remove-essential --allow-change-held-packages -o Dpkg::Options::=--force-confdef -o Dpkg::Options::=--force-confnew install --fix-missing --fix-broken build-essential libssl-dev gnupg libfreetype6-dev libjpeg62-turbo-dev libmcrypt-dev libicu-dev libxml2-dev libonig-dev vim wget unzip git
        echo "Add yarn package repository."
        curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
        echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
        echo "Update package lists."
        apt-get -y update
        echo "Install NVM."
        curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash
        . ~/.nvm/nvm.sh
        echo "Install node."
        nvm install ${{ matrix.node }}
        nvm use ${{ matrix.node }}
        echo "Install yarn."
        apt-get -y --allow-downgrades --allow-remove-essential --allow-change-held-packages -o Dpkg::Options::=--force-confdef -o Dpkg::Options::=--force-confnew install --fix-missing --fix-broken yarn
        echo "Install composer."
        curl -sS https://getcomposer.org/installer | php
        mv composer.phar /usr/local/bin/composer
        echo "Install PHP extensions."
        docker-php-ext-install -j$(nproc) iconv intl xml soap opcache pdo

    - name: Checkout repository
      uses: actions/checkout@v1
      with:
        ref: ${{ github.ref }}

    - name: Setup composer vendor folder cache
      uses: actions/cache@v1
      with:
        path: vendor
        key: composer-${{ hashFiles('composer.lock') }}

    - name: Setup yarn node_modules folder cache
      uses: actions/cache@v1
      with:
        path: node_modules
        key: node_modules-${{ hashFiles('yarn.lock') }}

    # Syntax check the PHP using 8 parallel threads
    - name: PHP Syntax Linting
      run: find . -path ./vendor -prune -o -name "*.php" -print0 | xargs -0 -n1 -P8 php -l

    - name: Run yarn install
      run: |
        yarn install

    - name: Run composer validate
      run: |
        composer validate

    - name: Run composer install
      run: |
        composer install --prefer-dist --no-progress --no-suggest

    - name: Run PHPUnit
      run: |
        composer test:unit

    - name: Run PHPCS Coding Standards
      run: |
        composer run lint:phpcs

    - name: Run ESLint
      run: |
        yarn lint:js

    - name: Run yarn build
      run: |
        yarn run build
